{"version":3,"sources":["api/marvel.js","components/Loading.js","components/Nav.js","components/CharacterList/CharacterList.js","containers/App.js","index.js"],"names":["axios","create","baseURL","Loading","className","role","aria-hidden","Component","Nav","state","term","handleInputChange","event","setState","target","value","Navbar","bg","variant","Brand","href","options","max","alt","src","type","placeholder","onChange","this","Button","onClick","props","handleButtonSubmit","CharacterList","handleModal","showModal","console","log","selectTab","tab","character","id","name","image","thumbnail","path","extension","description","length","substring","split","concat","join","fullDescription","comics","items","series","stories","detail","urls","find","r","wiki","comicLink","width","Modal","show","onHide","Header","closeButton","Title","Body","url","rel","Tabs","activeKey","onSelect","Tab","eventKey","title","map","comic","serie","publicKey","App","a","async","loading","marvelapi","get","params","nameStartsWith","limit","apikey","then","res","data","results","characters","getMarvelHeros","key","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.d089fa4b.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport default axios.create({\r\n    baseURL: \"https://gateway.marvel.com:443/v1/public\",\r\n})","import React, { Component } from 'react';\r\n\r\nclass Loading extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"d-flex align-items-center\">\r\n                    <strong>Loading...</strong>\r\n                    <div className=\"spinner-border ml-auto\" role=\"status\" aria-hidden=\"true\"></div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Loading;","import React, { Component } from 'react';\r\nimport Tilt from 'react-tilt';\r\nimport { Button, Navbar } from 'react-bootstrap';\r\n\r\nclass Nav extends Component {\r\n    state = { term: \"\" }\r\n\r\n    handleInputChange = (event) => {\r\n        // console.log(event.target.value);\r\n        this.setState({ term: event.target.value })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div >\r\n                <Navbar bg=\"light\" variant=\"light\">\r\n                    <div className=\"container\">\r\n                        <Navbar.Brand href=\"#\">\r\n                            <Tilt className=\"Tilt\" options={{ max: 45 }}>\r\n                                <img\r\n                                    alt=\"Logo\"\r\n                                    src=\"https://img.icons8.com/wired/64/000000/iron-man.png\"\r\n                                />\r\n                                Marvel-Searcher\r\n                            </Tilt>\r\n                        </Navbar.Brand>\r\n                        <div>\r\n                            <div className=\"input-group\">\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Character Name\"\r\n                                    onChange={this.handleInputChange}\r\n                                    value={this.state.term}\r\n                                />\r\n                                <Button\r\n                                    className=\"btn btn-danger input-lg\"\r\n                                    onClick={() => this.props.handleButtonSubmit(this.state.term)}\r\n                                >\r\n                                    Search\r\n                                </Button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Navbar>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Nav\r\n","import React, { Component } from 'react';\r\nimport { Modal, Tabs, Tab } from 'react-bootstrap';\r\n\r\nclass CharacterList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showModal: false,\r\n            tab: 'Comics'\r\n        };\r\n        const { character } = this.props;\r\n        console.log(character)\r\n        this.id = character.id;\r\n        this.name = character.name;\r\n        this.image = `${character.thumbnail.path}.${character.thumbnail.extension}`;\r\n        this.description = !character.description.length ? 'Description not available.' :\r\n            character.description.length > 150 ?\r\n                character.description.substring(0, 150).split('').concat('...').join('') :\r\n                character.description;\r\n        this.fullDescription = !character.description.length ? 'Description not available.' :\r\n            character.description;\r\n        this.comics = character.comics.items;\r\n        this.series = character.series.items;\r\n        this.stories = character.stories.items;\r\n        this.detail = character.urls.find(r => r.type === 'detail');\r\n        this.wiki = character.urls.find(r => r.type === 'wiki');\r\n        this.comicLink = character.urls.find(r => r.type === 'comiclink');\r\n    }\r\n\r\n    handleModal = (event) => {\r\n        this.setState({ showModal: !this.state.showModal });\r\n        console.log(this.state.showModal)\r\n    }\r\n\r\n    selectTab = (event) => {\r\n        this.setState({ tab: event })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"col-xs-12 col-sm-6 col-md-3\">\r\n                <div className=\"card mb-4 shadow-sm\">\r\n                    <img\r\n                        alt={this.name}\r\n                        className=\"card-img=top\"\r\n                        src={this.image}\r\n                        width=\"100%\"\r\n                    />\r\n                    <div className=\"card-body\">\r\n                        <h5 className=\"card-title\">{this.name}</h5>\r\n                        <p className=\"card-text\">\r\n                            {this.description}\r\n                        </p>\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"container btn btn-danger btn-lg\"\r\n                            onClick={this.handleModal}>\r\n                            More Info\r\n                        </button>\r\n                        <Modal show={this.state.showModal} onHide={this.handleModal}>\r\n                            <Modal.Header closeButton>\r\n                                <Modal.Title>{this.name}</Modal.Title>\r\n                            </Modal.Header>\r\n                            <Modal.Body>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-4\">\r\n                                        <img\r\n                                            alt={this.name}\r\n                                            className=\"card-img=top\"\r\n                                            src={this.image}\r\n                                            width=\"100%\"\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"col-md-8\">\r\n                                        <h4>Description</h4>\r\n                                        <p>{this.fullDescription}</p>\r\n                                        {this.detail &&\r\n                                            <a target=\"_blank\" className=\"btn-link btn-block\"\r\n                                                href={this.detail.url} rel=\"noopener noreferrer\">\r\n                                                Read more on Marvel Official Page</a>\r\n                                        }\r\n                                        {this.wiki &&\r\n                                            <a target=\"_blank\" className=\"btn-link btn-block\"\r\n                                                href={this.wiki.url} rel=\"noopener noreferrer\">\r\n                                                Read more on Marvel Universe Wiki</a>\r\n                                        }\r\n                                        {this.comicLink &&\r\n                                            <a target=\"_blank\" className=\"btn-link btn-block\"\r\n                                                href={this.comicLink.url} rel=\"noopener noreferrer\">\r\n                                                Read Comic Public Info</a>\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            </Modal.Body>\r\n                            <Tabs\r\n                                id=\"uncontrolled-tab-example\"\r\n                                activeKey={this.state.tab}\r\n                                onSelect={this.selectTab}>\r\n                                <Tab eventKey=\"Comics\" title=\"Comics\">\r\n                                    {this.comics.length ?\r\n                                        this.comics.map(comic => {\r\n                                            return (\r\n                                                <div className=\"badge badge-pill badge-danger\">\r\n                                                    {comic.name}\r\n                                                </div>\r\n                                            )\r\n                                        }) :\r\n                                        <p>No Comics Available.</p>\r\n                                    }\r\n                                </Tab>\r\n                                <Tab eventKey=\"Series\" title=\"Series\">\r\n                                    {this.series.length ?\r\n                                        this.series.map(serie => {\r\n                                            return (\r\n                                                <div className=\"badge badge-pill badge-danger\">\r\n                                                    {serie.name}\r\n                                                </div>\r\n                                            )\r\n                                        }) :\r\n                                        <p>No Series Available.</p>\r\n                                    }\r\n                                </Tab>\r\n                                <Tab eventKey=\"Stories\" title=\"Stories\">\r\n                                    {this.comics.length ?\r\n                                        this.comics.map(comic => {\r\n                                            return (\r\n                                                <div className=\"badge badge-pill badge-danger\">\r\n                                                    {comic.name}\r\n                                                </div>\r\n                                            )\r\n                                        }) :\r\n                                        <p>No Comics Available.</p>\r\n                                    }\r\n                                </Tab>\r\n                            </Tabs>\r\n                        </Modal>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CharacterList","import React, { Component } from 'react';\r\nimport marvelapi from '../api/marvel';\r\nimport Loading from '../components/Loading'\r\nimport Nav from '../components/Nav';\r\nimport CharacterList from '../components/CharacterList/CharacterList';\r\n\r\nconst publicKey = '0cd61aaa37f71c2c71836dd6866b412d'\r\n\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            characters: null,\r\n            loading: false,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getMarvelHeros();\r\n    }\r\n\r\n    getMarvelHeros() {\r\n        marvelapi.get(`/characters`, {\r\n            params: {\r\n                limit: '50',\r\n                apikey: publicKey\r\n            }\r\n        })\r\n            .then(res => res.data.data.results)\r\n            .then(results =>\r\n                this.setState({\r\n                    characters: results,\r\n                    loading: true,\r\n                })\r\n            )\r\n    }\r\n\r\n    handleButtonSubmit = async term => {\r\n        this.setState({ loading: false })\r\n        await marvelapi.get(`/characters`, {\r\n            params: {\r\n                nameStartsWith: term,\r\n                limit: '12',\r\n                apikey: publicKey\r\n            }\r\n        })\r\n            .then(res => res.data.data.results)\r\n            .then(results => this.setState({\r\n                characters: results,\r\n                loading: true,\r\n            }))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Nav handleButtonSubmit={this.handleButtonSubmit} />\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        {this.state.loading ? this.state.characters.map(character =>\r\n                            <CharacterList\r\n                                key={character.id}\r\n                                character={character}\r\n                            />) : <Loading />\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './containers/App'\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.querySelector('#root')\r\n)"],"sourceRoot":""}